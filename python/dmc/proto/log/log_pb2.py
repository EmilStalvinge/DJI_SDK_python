# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/log/log.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/log/log.proto',
  package='log',
  syntax='proto3',
  serialized_options=_b('Z,github.com/tobiasfriden/dmc-server/proto/log'),
  serialized_pb=_b('\n\x13proto/log/log.proto\x12\x03log\"8\n\x07Payload\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\r\n\x05level\x18\x03 \x01(\x05\"w\n\x0cPayloadBatch\x12+\n\x05\x62\x61tch\x18\x01 \x03(\x0b\x32\x1c.log.PayloadBatch.BatchEntry\x1a:\n\nBatchEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1b\n\x05value\x18\x02 \x01(\x0b\x32\x0c.log.Payload:\x02\x38\x01\x42.Z,github.com/tobiasfriden/dmc-server/proto/logb\x06proto3')
)




_PAYLOAD = _descriptor.Descriptor(
  name='Payload',
  full_name='log.Payload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='log.Payload.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='log.Payload.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='level', full_name='log.Payload.level', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=84,
)


_PAYLOADBATCH_BATCHENTRY = _descriptor.Descriptor(
  name='BatchEntry',
  full_name='log.PayloadBatch.BatchEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='log.PayloadBatch.BatchEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='log.PayloadBatch.BatchEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=205,
)

_PAYLOADBATCH = _descriptor.Descriptor(
  name='PayloadBatch',
  full_name='log.PayloadBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch', full_name='log.PayloadBatch.batch', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_PAYLOADBATCH_BATCHENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=86,
  serialized_end=205,
)

_PAYLOADBATCH_BATCHENTRY.fields_by_name['value'].message_type = _PAYLOAD
_PAYLOADBATCH_BATCHENTRY.containing_type = _PAYLOADBATCH
_PAYLOADBATCH.fields_by_name['batch'].message_type = _PAYLOADBATCH_BATCHENTRY
DESCRIPTOR.message_types_by_name['Payload'] = _PAYLOAD
DESCRIPTOR.message_types_by_name['PayloadBatch'] = _PAYLOADBATCH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Payload = _reflection.GeneratedProtocolMessageType('Payload', (_message.Message,), dict(
  DESCRIPTOR = _PAYLOAD,
  __module__ = 'proto.log.log_pb2'
  # @@protoc_insertion_point(class_scope:log.Payload)
  ))
_sym_db.RegisterMessage(Payload)

PayloadBatch = _reflection.GeneratedProtocolMessageType('PayloadBatch', (_message.Message,), dict(

  BatchEntry = _reflection.GeneratedProtocolMessageType('BatchEntry', (_message.Message,), dict(
    DESCRIPTOR = _PAYLOADBATCH_BATCHENTRY,
    __module__ = 'proto.log.log_pb2'
    # @@protoc_insertion_point(class_scope:log.PayloadBatch.BatchEntry)
    ))
  ,
  DESCRIPTOR = _PAYLOADBATCH,
  __module__ = 'proto.log.log_pb2'
  # @@protoc_insertion_point(class_scope:log.PayloadBatch)
  ))
_sym_db.RegisterMessage(PayloadBatch)
_sym_db.RegisterMessage(PayloadBatch.BatchEntry)


DESCRIPTOR._options = None
_PAYLOADBATCH_BATCHENTRY._options = None
# @@protoc_insertion_point(module_scope)
